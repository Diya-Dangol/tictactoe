{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","components/CalculateWinner.js","App.js","index.js"],"names":["style","backGround","border","fontSize","fontWeight","cursor","outline","Square","props","onClick","value","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","key","Game","useState","Array","fill","board","setBoard","XIsNext","setXIsNext","winner","lines","length","a","b","c","CalculateWinner","count","setCount","boardCopy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAEMA,EAAQ,CACVC,WAAW,YACXC,OAAQ,kBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QAaEC,EAVA,SAACC,GACZ,OAEI,4BAAQR,MAAOA,EACfS,QAAWD,EAAMC,SAChBD,EAAME,QCbTV,EAAQ,CACbE,OAAQ,kBACRS,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAeAC,EAZD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAST,EAAa,EAAbA,QACrB,OACI,yBAAKT,MAAQA,GACRkB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC,EAAD,CAAQC,IAAKD,EACbX,MAASU,EACTX,QAAS,kBAAMA,EAAQY,WCfvC,IAwCeE,EAxCF,WAAO,IAAD,EAEWC,mBAASC,MAAM,GAAGC,KAAK,OAFlC,mBAERC,EAFQ,KAEDC,EAFC,OAGeJ,oBAAS,GAHxB,mBAGRK,EAHQ,KAGCC,EAHD,KAITC,ECPH,SAAyBb,GAY5B,IAXA,IAAMc,EAAQ,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGHX,EAAG,EAAGA,EAAIW,EAAMC,OAAQZ,IAAK,CAAC,IAAD,cAChBW,EAAMX,GADU,GAC1Ba,EAD0B,KACvBC,EADuB,KACpBC,EADoB,KAEjC,GAAGlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GACjE,OAAOlB,EAAQgB,GAGvB,OAAO,KDXQG,CAAgBV,GAJhB,EAKWH,mBAAS,GALpB,mBAKRc,EALQ,KAKDC,EALC,KAsBf,OACI,6BACI,kBAAC,EAAD,CAAOrB,QAASS,EAAOlB,QAjBX,SAACY,GACjB,IAAMmB,EAAS,YAAOb,GAEnBI,GAAUS,EAAUnB,KACvBkB,EAASD,EAAM,GAEfE,EAAUnB,GAAKQ,EAAU,IAAM,IAC/BD,EAASY,GACTV,GAAYD,OAUR,6BACI,2BACKE,EAAS,UAAYA,EACtB,gBAAkBF,EAAU,IAAM,OAG1C,4BAAQpB,QAbA,WACZmB,EAASH,MAAM,GAAGC,KAAK,SAYnB,YAGS,IAARY,GAAcP,EAAgC,KAAvB,6CE3BrBU,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.990fcee6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst style = {\r\n    backGround:'lightblue',\r\n    border: '2px solid black',\r\n    fontSize: '30px',\r\n    fontWeight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n}\r\n\r\nconst Square = (props) => {\r\n    return(\r\n\r\n        <button style={style} \r\n        onClick = {props.onClick}>\r\n        {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst style = {\r\n\tborder: \"4px solid black\",\r\n\tborderRadius: \"10px\",\r\n\twidth: \"250px\",\r\n\theight: \"250px\",\r\n\tmargin: \"0 auto\",\r\n\tdisplay: \"grid\",\r\n\tgridTemplate: \"repeat(3, 1fr) / repeat(3, 1fr)\",\r\n};\r\n\r\nconst Board = ({squares, onClick}) => {\r\n    return(\r\n        <div style= {style} >\r\n            {squares.map((square, i) => (\r\n                <Square key={i} \r\n                value = {square} \r\n                onClick={() => onClick(i)} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;","import React, {useState} from 'react';\r\nimport Board from './Board';\r\nimport { CalculateWinner } from './CalculateWinner';\r\n\r\nconst Game = () => {\r\n\r\n    const [board, setBoard] = useState(Array(9).fill(null))\r\n    const [XIsNext, setXIsNext] = useState(true);\r\n    const winner = CalculateWinner(board);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const handleClick = (i) => {\r\n        const boardCopy = [...board];\r\n        //if user click an occupied sqyare of or if game is won, return\r\n        if(winner || boardCopy[i]) return;\r\n        setCount(count+1);\r\n        // put an X or an O in the clicked square\r\n        boardCopy[i] = XIsNext ? 'X' : 'O';\r\n        setBoard(boardCopy);\r\n        setXIsNext(!XIsNext);\r\n    }\r\n\r\n    const newGame = () => {\r\n        setBoard(Array(9).fill(null));\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div >\r\n                <p>\r\n                    {winner ? 'Winner:' + winner : \r\n                    'Next Player:' + (XIsNext ? 'X' : 'O')}\r\n                </p>\r\n            </div>\r\n            <button onClick={newGame}>\r\n                New Game \r\n            </button>\r\n            {count===9 && !winner ? <div>No one won</div>: null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","\r\nexport function CalculateWinner(squares) {\r\n    const lines = [\r\n        [0,1,2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for(let i =0; i < lines.length; i++) {\r\n        const [a, b, c] =lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n\r\n}","import React from 'react';\nimport Whatever from './components/Game';\n\nfunction App() {\n  return (\n    <div>\n      <Whatever />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}